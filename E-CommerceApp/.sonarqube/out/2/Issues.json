{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador do Microsoft (R) Visual C#",
        "version": "4.7.0.0",
        "fileVersion": "4.7.0-3.23328.4 (7931076b)",
        "semanticVersion": "4.7.0",
        "language": "pt-BR"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "O propriedade não anulável 'Issuer' precisa conter um valor não nulo ao sair do construtor. Considere declarar o propriedade como anulável.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Configurations/JwtOptions.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 23,
                  "endLine": 12,
                  "endColumn": 29
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Configurations/JwtOptions.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 23,
                  "endLine": 12,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "O propriedade não anulável 'Audience' precisa conter um valor não nulo ao sair do construtor. Considere declarar o propriedade como anulável.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Configurations/JwtOptions.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Configurations/JwtOptions.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 23,
                  "endLine": 13,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "O propriedade não anulável 'SigningCredentials' precisa conter um valor não nulo ao sair do construtor. Considere declarar o propriedade como anulável.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Configurations/JwtOptions.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 53
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Configurations/JwtOptions.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "O propriedade não anulável '_unitOfWork' precisa conter um valor não nulo ao sair do construtor. Considere declarar o propriedade como anulável.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/RoleService.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 16,
                  "endLine": 17,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/RoleService.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 29,
                  "endLine": 15,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "Este método assíncrono não possui operadores 'await' e será executado de modo síncrono. É recomendável o uso do operador 'await' para aguardar chamadas à API desbloqueadas ou do operador 'await Task.Run(...)' para realizar um trabalho associado à CPU em um thread em segundo plano.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/RoleService.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 27,
                  "endLine": 23,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possível argumento de referência nula para o parâmetro 's' em 'byte[] Encoding.GetBytes(string s)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Extensions/AuthenticationSetup.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 80,
                  "endLine": 21,
                  "endColumn": 136
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possível atribuição de referência nula.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Extensions/AuthenticationSetup.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 34,
                  "endLine": 26,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possível atribuição de referência nula.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Extensions/AuthenticationSetup.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 36,
                  "endLine": 27,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possível argumento de referência nula para o parâmetro 'user' em 'Task<bool> UserManager<ECommUser>.IsLockedOutAsync(ECommUser user)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/IdentityService.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 51,
                  "endLine": 90,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possível argumento de referência nula para o parâmetro 'email' em 'Task<LoginResponse> IdentityService.GetUserCredentials(string email)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/IdentityService.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 49,
                  "endLine": 97,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possível argumento de referência nula para o parâmetro 'user' em 'Task<IList<Claim>> IdentityService.ObtainClaims(ECommUser user, bool isAccessToken)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/IdentityService.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 56,
                  "endLine": 128,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possível argumento de referência nula para o parâmetro 'value' em 'Claim.Claim(string type, string value)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/IdentityService.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 65,
                  "endLine": 157,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possível retorno de referência nula.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/IdentityService.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 20,
                  "endLine": 186,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_unitOfWork' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/IdentityService.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 29,
                  "endLine": 21,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private property '_unitOfWork'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/RoleService.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 29,
                  "endLine": 15,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/RoleService.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 13,
                  "endLine": 25,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/RoleService.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 22,
                  "endLine": 23,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/RoleService.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 21,
                  "endLine": 42,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "O membro 'AddAdmin' não acessa os dados da instância e pode ser marcado como estático",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/RoleService.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 27,
                  "endLine": 23,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "O membro 'AssignClaimToRole' não acessa os dados da instância e pode ser marcado como estático",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/RoleService.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 21,
                  "endLine": 42,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1155",
          "level": "warning",
          "message": "Use '.Any()' to test whether this 'IEnumerable<Microsoft.AspNetCore.Identity.IdentityError>' is empty or not.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/IdentityService.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 52,
                  "endLine": 54,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1827",
          "level": "note",
          "message": "Count() is used where Any() could be used instead to improve performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Dev/Projects/.NET%20Work/E-CommerceApp/E-Commerce.Services/Services/Implementations/IdentityService.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 38,
                  "endLine": 54,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "OperationKey": "OperationBinaryLeft"
            }
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Marcar membros como estáticos",
          "fullDescription": "Os membros que não acessam os dados da instância nem chamam os métodos da instância podem ser marcados como estáticos. Depois que você marcar os métodos como estáticos, o compilador emitirá os sites de chamada não virtuais para esses membros. Isso pode oferecer um ganho de desempenho mensurável para códigos sensíveis ao desempenho.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1827": {
          "id": "CA1827",
          "shortDescription": "Do not use Count() or LongCount() when Any() can be used",
          "fullDescription": "For non-empty collections, Count() and LongCount() enumerate the entire sequence, while Any() stops at the first item or the first item that satisfies a condition.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1827",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "O método assíncrono não possui operadores 'await' e será executado de forma síncrona",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8601": {
          "id": "CS8601",
          "shortDescription": "Possível atribuição de referência nula.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8601)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8603": {
          "id": "CS8603",
          "shortDescription": "Possível retorno de referência nula.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8603)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possível argumento de referência nula.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "O campo não anulável precisa conter um valor não nulo ao sair do construtor. Considere declará-lo como anulável.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "This rule raises an issue when a private/internal type or member is never referenced in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1155": {
          "id": "S1155",
          "shortDescription": "\"Any()\" should be used to test for emptiness",
          "fullDescription": "When you call Any(), it clearly communicates the code’s intention, which is to check if the collection is empty. Using Count() == 0 for this purpose is less direct and makes the code slightly more complex. However, there are some cases where special attention should be paid:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1155",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "An empty method is generally considered bad practice and can lead to confusion, readability, and maintenance issues. Empty methods bring no functionality and are misleading to others as they might think the method implementation fulfills a specific and identified requirement.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Commented-out code distracts the focus from the actual executed code. It creates a noise that increases maintenance code. And because it is never executed, it quickly becomes out of date and invalid.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3168": {
          "id": "S3168",
          "shortDescription": "\"async\" methods should not return \"void\"",
          "fullDescription": "An async method with a void return type does not follow the task asynchronous programming (TAP) model since the return type should be Task or Task<TResult>",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3168",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}